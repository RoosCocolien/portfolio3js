{
  "version": 3,
  "sources": ["../camera-controls/dist/camera-controls.module.js", "dep:camera-controls"],
  "sourcesContent": ["/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar ACTION;\r\n(function (ACTION) {\r\n    ACTION[ACTION[\"NONE\"] = 0] = \"NONE\";\r\n    ACTION[ACTION[\"ROTATE\"] = 1] = \"ROTATE\";\r\n    ACTION[ACTION[\"TRUCK\"] = 2] = \"TRUCK\";\r\n    ACTION[ACTION[\"OFFSET\"] = 3] = \"OFFSET\";\r\n    ACTION[ACTION[\"DOLLY\"] = 4] = \"DOLLY\";\r\n    ACTION[ACTION[\"ZOOM\"] = 5] = \"ZOOM\";\r\n    ACTION[ACTION[\"TOUCH_ROTATE\"] = 6] = \"TOUCH_ROTATE\";\r\n    ACTION[ACTION[\"TOUCH_TRUCK\"] = 7] = \"TOUCH_TRUCK\";\r\n    ACTION[ACTION[\"TOUCH_OFFSET\"] = 8] = \"TOUCH_OFFSET\";\r\n    ACTION[ACTION[\"TOUCH_DOLLY\"] = 9] = \"TOUCH_DOLLY\";\r\n    ACTION[ACTION[\"TOUCH_ZOOM\"] = 10] = \"TOUCH_ZOOM\";\r\n    ACTION[ACTION[\"TOUCH_DOLLY_TRUCK\"] = 11] = \"TOUCH_DOLLY_TRUCK\";\r\n    ACTION[ACTION[\"TOUCH_DOLLY_OFFSET\"] = 12] = \"TOUCH_DOLLY_OFFSET\";\r\n    ACTION[ACTION[\"TOUCH_ZOOM_TRUCK\"] = 13] = \"TOUCH_ZOOM_TRUCK\";\r\n    ACTION[ACTION[\"TOUCH_ZOOM_OFFSET\"] = 14] = \"TOUCH_ZOOM_OFFSET\";\r\n})(ACTION || (ACTION = {}));\r\nfunction isPerspectiveCamera(camera) {\r\n    return camera.isPerspectiveCamera;\r\n}\r\nfunction isOrthographicCamera(camera) {\r\n    return camera.isOrthographicCamera;\r\n}\n\nvar PI_2 = Math.PI * 2;\r\nvar PI_HALF = Math.PI / 2;\r\nvar FPS_60 = 60;\n\nvar EPSILON = 1e-5;\r\nfunction approxZero(number) {\r\n    return Math.abs(number) < EPSILON;\r\n}\r\nfunction approxEquals(a, b) {\r\n    return approxZero(a - b);\r\n}\r\nfunction roundToStep(value, step) {\r\n    return Math.round(value / step) * step;\r\n}\r\nfunction infinityToMaxNumber(value) {\r\n    if (isFinite(value))\r\n        return value;\r\n    if (value < 0)\r\n        return -Number.MAX_VALUE;\r\n    return Number.MAX_VALUE;\r\n}\r\nfunction maxNumberToInfinity(value) {\r\n    if (Math.abs(value) < Number.MAX_VALUE)\r\n        return value;\r\n    return value * Infinity;\r\n}\n\nfunction isTouchEvent(event) {\r\n    return 'TouchEvent' in window && event instanceof TouchEvent;\r\n}\n\nfunction extractClientCoordFromEvent(event, out) {\r\n    out.set(0, 0);\r\n    if (isTouchEvent(event)) {\r\n        var touchEvent = event;\r\n        for (var i = 0; i < touchEvent.touches.length; i++) {\r\n            out.x += touchEvent.touches[i].clientX;\r\n            out.y += touchEvent.touches[i].clientY;\r\n        }\r\n        out.x /= touchEvent.touches.length;\r\n        out.y /= touchEvent.touches.length;\r\n        return out;\r\n    }\r\n    else {\r\n        var mouseEvent = event;\r\n        out.set(mouseEvent.clientX, mouseEvent.clientY);\r\n        return out;\r\n    }\r\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\r\n    if (isOrthographicCamera(camera)) {\r\n        console.warn(message + \" is not supported in OrthographicCamera\");\r\n        return true;\r\n    }\r\n    return false;\r\n}\n\nfunction quatInvertCompat(target) {\r\n    if (target.invert) {\r\n        target.invert();\r\n    }\r\n    else {\r\n        target.inverse();\r\n    }\r\n    return target;\r\n}\n\nvar EventDispatcher = (function () {\r\n    function EventDispatcher() {\r\n        this._listeners = {};\r\n    }\r\n    EventDispatcher.prototype.addEventListener = function (type, listener) {\r\n        var listeners = this._listeners;\r\n        if (listeners[type] === undefined)\r\n            listeners[type] = [];\r\n        if (listeners[type].indexOf(listener) === -1)\r\n            listeners[type].push(listener);\r\n    };\r\n    EventDispatcher.prototype.removeEventListener = function (type, listener) {\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[type];\r\n        if (listenerArray !== undefined) {\r\n            var index = listenerArray.indexOf(listener);\r\n            if (index !== -1)\r\n                listenerArray.splice(index, 1);\r\n        }\r\n    };\r\n    EventDispatcher.prototype.removeAllEventListeners = function (type) {\r\n        if (!type) {\r\n            this._listeners = {};\r\n            return;\r\n        }\r\n        if (Array.isArray(this._listeners[type]))\r\n            this._listeners[type].length = 0;\r\n    };\r\n    EventDispatcher.prototype.dispatchEvent = function (event) {\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[event.type];\r\n        if (listenerArray !== undefined) {\r\n            event.target = this;\r\n            var array = listenerArray.slice(0);\r\n            for (var i = 0, l = array.length; i < l; i++) {\r\n                array[i].call(this, event);\r\n            }\r\n        }\r\n    };\r\n    return EventDispatcher;\r\n}());\n\nvar isBrowser = typeof window !== 'undefined';\r\nvar isMac = isBrowser && /Mac/.test(navigator.platform);\r\nvar readonlyACTION = Object.freeze(ACTION);\r\nvar TOUCH_DOLLY_FACTOR = 1 / 8;\r\nvar THREE;\r\nvar _ORIGIN;\r\nvar _AXIS_Y;\r\nvar _AXIS_Z;\r\nvar _v2;\r\nvar _v3A;\r\nvar _v3B;\r\nvar _v3C;\r\nvar _xColumn;\r\nvar _yColumn;\r\nvar _zColumn;\r\nvar _sphericalA;\r\nvar _sphericalB;\r\nvar _box3A;\r\nvar _box3B;\r\nvar _sphere;\r\nvar _quaternionA;\r\nvar _quaternionB;\r\nvar _rotationMatrix;\r\nvar _raycaster;\r\nvar CameraControls = (function (_super) {\r\n    __extends(CameraControls, _super);\r\n    function CameraControls(camera, domElement) {\r\n        var _this = _super.call(this) || this;\r\n        _this.minPolarAngle = 0;\r\n        _this.maxPolarAngle = Math.PI;\r\n        _this.minAzimuthAngle = -Infinity;\r\n        _this.maxAzimuthAngle = Infinity;\r\n        _this.minDistance = 0;\r\n        _this.maxDistance = Infinity;\r\n        _this.infinityDolly = false;\r\n        _this.minZoom = 0.01;\r\n        _this.maxZoom = Infinity;\r\n        _this.dampingFactor = 0.05;\r\n        _this.draggingDampingFactor = 0.25;\r\n        _this.azimuthRotateSpeed = 1.0;\r\n        _this.polarRotateSpeed = 1.0;\r\n        _this.dollySpeed = 1.0;\r\n        _this.truckSpeed = 2.0;\r\n        _this.dollyToCursor = false;\r\n        _this.dragToOffset = false;\r\n        _this.verticalDragToForward = false;\r\n        _this.boundaryFriction = 0.0;\r\n        _this.colliderMeshes = [];\r\n        _this.cancel = function () { };\r\n        _this._enabled = true;\r\n        _this._state = ACTION.NONE;\r\n        _this._viewport = null;\r\n        _this._dollyControlAmount = 0;\r\n        _this._boundaryEnclosesCamera = false;\r\n        _this._needsUpdate = true;\r\n        _this._updatedLastTime = false;\r\n        _this._truckInternal = function (deltaX, deltaY, dragToOffset) {\r\n            if (isPerspectiveCamera(_this._camera)) {\r\n                var offset = _v3A.copy(_this._camera.position).sub(_this._target);\r\n                var fov = _this._camera.getEffectiveFOV() * THREE.MathUtils.DEG2RAD;\r\n                var targetDistance = offset.length() * Math.tan(fov * 0.5);\r\n                var truckX = (_this.truckSpeed * deltaX * targetDistance / _this._elementRect.w);\r\n                var pedestalY = (_this.truckSpeed * deltaY * targetDistance / _this._elementRect.w);\r\n                if (_this.verticalDragToForward) {\r\n                    dragToOffset ?\r\n                        _this.setFocalOffset(_this._focalOffsetEnd.x + truckX, _this._focalOffsetEnd.y, _this._focalOffsetEnd.z, true) :\r\n                        _this.truck(truckX, 0, true);\r\n                    _this.forward(-pedestalY, true);\r\n                }\r\n                else {\r\n                    dragToOffset ?\r\n                        _this.setFocalOffset(_this._focalOffsetEnd.x + truckX, _this._focalOffsetEnd.y + pedestalY, _this._focalOffsetEnd.z, true) :\r\n                        _this.truck(truckX, pedestalY, true);\r\n                }\r\n            }\r\n            else if (isOrthographicCamera(_this._camera)) {\r\n                var camera = _this._camera;\r\n                var truckX = deltaX * (camera.right - camera.left) / camera.zoom / _this._elementRect.z;\r\n                var pedestalY = deltaY * (camera.top - camera.bottom) / camera.zoom / _this._elementRect.w;\r\n                dragToOffset ?\r\n                    _this.setFocalOffset(_this._focalOffsetEnd.x + truckX, _this._focalOffsetEnd.y + pedestalY, _this._focalOffsetEnd.z, true) :\r\n                    _this.truck(truckX, pedestalY, true);\r\n            }\r\n        };\r\n        _this._rotateInternal = function (deltaX, deltaY) {\r\n            var theta = PI_2 * _this.azimuthRotateSpeed * deltaX / _this._elementRect.w;\r\n            var phi = PI_2 * _this.polarRotateSpeed * deltaY / _this._elementRect.w;\r\n            _this.rotate(theta, phi, true);\r\n        };\r\n        _this._dollyInternal = function (delta, x, y) {\r\n            var dollyScale = Math.pow(0.95, -delta * _this.dollySpeed);\r\n            var distance = _this._sphericalEnd.radius * dollyScale;\r\n            var prevRadius = _this._sphericalEnd.radius;\r\n            _this.dollyTo(distance);\r\n            if (_this.infinityDolly && distance < _this.minDistance) {\r\n                _this._camera.getWorldDirection(_v3A);\r\n                _this._targetEnd.add(_v3A.normalize().multiplyScalar(prevRadius));\r\n                _this._target.add(_v3A.normalize().multiplyScalar(prevRadius));\r\n            }\r\n            if (_this.dollyToCursor) {\r\n                _this._dollyControlAmount += _this._sphericalEnd.radius - prevRadius;\r\n                if (_this.infinityDolly && distance < _this.minDistance) {\r\n                    _this._dollyControlAmount -= prevRadius;\r\n                }\r\n                _this._dollyControlCoord.set(x, y);\r\n            }\r\n            return;\r\n        };\r\n        _this._zoomInternal = function (delta, x, y) {\r\n            var zoomScale = Math.pow(0.95, delta * _this.dollySpeed);\r\n            _this.zoomTo(_this._zoom * zoomScale);\r\n            if (_this.dollyToCursor) {\r\n                _this._dollyControlAmount = _this._zoomEnd;\r\n                _this._dollyControlCoord.set(x, y);\r\n            }\r\n            return;\r\n        };\r\n        if (typeof THREE === 'undefined') {\r\n            console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\r\n        }\r\n        _this._camera = camera;\r\n        _this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(_this._camera.up, _AXIS_Y);\r\n        _this._yAxisUpSpaceInverse = quatInvertCompat(_this._yAxisUpSpace.clone());\r\n        _this._state = ACTION.NONE;\r\n        _this._domElement = domElement;\r\n        _this._target = new THREE.Vector3();\r\n        _this._targetEnd = _this._target.clone();\r\n        _this._focalOffset = new THREE.Vector3();\r\n        _this._focalOffsetEnd = _this._focalOffset.clone();\r\n        _this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(_this._camera.position).applyQuaternion(_this._yAxisUpSpace));\r\n        _this._sphericalEnd = _this._spherical.clone();\r\n        _this._zoom = _this._camera.zoom;\r\n        _this._zoomEnd = _this._zoom;\r\n        _this._nearPlaneCorners = [\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n            new THREE.Vector3(),\r\n        ];\r\n        _this._updateNearPlaneCorners();\r\n        _this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\r\n        _this._target0 = _this._target.clone();\r\n        _this._position0 = _this._camera.position.clone();\r\n        _this._zoom0 = _this._zoom;\r\n        _this._focalOffset0 = _this._focalOffset.clone();\r\n        _this._dollyControlAmount = 0;\r\n        _this._dollyControlCoord = new THREE.Vector2();\r\n        _this.mouseButtons = {\r\n            left: ACTION.ROTATE,\r\n            middle: ACTION.DOLLY,\r\n            right: ACTION.TRUCK,\r\n            wheel: isPerspectiveCamera(_this._camera) ? ACTION.DOLLY :\r\n                isOrthographicCamera(_this._camera) ? ACTION.ZOOM :\r\n                    ACTION.NONE,\r\n        };\r\n        _this.touches = {\r\n            one: ACTION.TOUCH_ROTATE,\r\n            two: isPerspectiveCamera(_this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\r\n                isOrthographicCamera(_this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\r\n                    ACTION.NONE,\r\n            three: ACTION.TOUCH_TRUCK,\r\n        };\r\n        _this._elementRect = new THREE.Vector4();\r\n        if (_this._domElement) {\r\n            var dragStartPosition_1 = new THREE.Vector2();\r\n            var lastDragPosition_1 = new THREE.Vector2();\r\n            var dollyStart_1 = new THREE.Vector2();\r\n            var cancelDragging_1 = function () {\r\n                _this._state = ACTION.NONE;\r\n                document.removeEventListener('mousemove', dragging_1);\r\n                document.removeEventListener('touchmove', dragging_1, { passive: false });\r\n                document.removeEventListener('mouseup', endDragging_1);\r\n                document.removeEventListener('touchend', endDragging_1);\r\n            };\r\n            var onMouseDown_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                cancelDragging_1();\r\n                switch (event.button) {\r\n                    case THREE.MOUSE.LEFT:\r\n                        _this._state = _this.mouseButtons.left;\r\n                        break;\r\n                    case THREE.MOUSE.MIDDLE:\r\n                        _this._state = _this.mouseButtons.middle;\r\n                        break;\r\n                    case THREE.MOUSE.RIGHT:\r\n                        _this._state = _this.mouseButtons.right;\r\n                        break;\r\n                }\r\n                startDragging_1(event);\r\n            };\r\n            var onTouchStart_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                cancelDragging_1();\r\n                switch (event.touches.length) {\r\n                    case 1:\r\n                        _this._state = _this.touches.one;\r\n                        break;\r\n                    case 2:\r\n                        _this._state = _this.touches.two;\r\n                        break;\r\n                    case 3:\r\n                        _this._state = _this.touches.three;\r\n                        break;\r\n                }\r\n                startDragging_1(event);\r\n            };\r\n            var lastScrollTimeStamp_1 = -1;\r\n            var onMouseWheel_1 = function (event) {\r\n                if (!_this._enabled || _this.mouseButtons.wheel === ACTION.NONE)\r\n                    return;\r\n                event.preventDefault();\r\n                if (_this.dollyToCursor ||\r\n                    _this.mouseButtons.wheel === ACTION.ROTATE ||\r\n                    _this.mouseButtons.wheel === ACTION.TRUCK) {\r\n                    var now = performance.now();\r\n                    if (lastScrollTimeStamp_1 - now < 1000)\r\n                        _this._getClientRect(_this._elementRect);\r\n                    lastScrollTimeStamp_1 = now;\r\n                }\r\n                var deltaYFactor = isMac ? -1 : -3;\r\n                var delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\r\n                var x = _this.dollyToCursor ? (event.clientX - _this._elementRect.x) / _this._elementRect.z * 2 - 1 : 0;\r\n                var y = _this.dollyToCursor ? (event.clientY - _this._elementRect.y) / _this._elementRect.w * -2 + 1 : 0;\r\n                switch (_this.mouseButtons.wheel) {\r\n                    case ACTION.ROTATE: {\r\n                        _this._rotateInternal(event.deltaX, event.deltaY);\r\n                        break;\r\n                    }\r\n                    case ACTION.TRUCK: {\r\n                        _this._truckInternal(event.deltaX, event.deltaY, false);\r\n                        break;\r\n                    }\r\n                    case ACTION.OFFSET: {\r\n                        _this._truckInternal(event.deltaX, event.deltaY, true);\r\n                        break;\r\n                    }\r\n                    case ACTION.DOLLY: {\r\n                        _this._dollyInternal(-delta, x, y);\r\n                        break;\r\n                    }\r\n                    case ACTION.ZOOM: {\r\n                        _this._zoomInternal(-delta, x, y);\r\n                        break;\r\n                    }\r\n                }\r\n                _this.dispatchEvent({\r\n                    type: 'control',\r\n                    originalEvent: event,\r\n                });\r\n            };\r\n            var onContextMenu_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                event.preventDefault();\r\n            };\r\n            var startDragging_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                extractClientCoordFromEvent(event, _v2);\r\n                _this._getClientRect(_this._elementRect);\r\n                dragStartPosition_1.copy(_v2);\r\n                lastDragPosition_1.copy(_v2);\r\n                var isMultiTouch = isTouchEvent(event) && event.touches.length >= 2;\r\n                if (isMultiTouch) {\r\n                    var touchEvent = event;\r\n                    var dx = _v2.x - touchEvent.touches[1].clientX;\r\n                    var dy = _v2.y - touchEvent.touches[1].clientY;\r\n                    var distance = Math.sqrt(dx * dx + dy * dy);\r\n                    dollyStart_1.set(0, distance);\r\n                    var x = (touchEvent.touches[0].clientX + touchEvent.touches[1].clientX) * 0.5;\r\n                    var y = (touchEvent.touches[0].clientY + touchEvent.touches[1].clientY) * 0.5;\r\n                    lastDragPosition_1.set(x, y);\r\n                }\r\n                document.addEventListener('mousemove', dragging_1);\r\n                document.addEventListener('touchmove', dragging_1, { passive: false });\r\n                document.addEventListener('mouseup', endDragging_1);\r\n                document.addEventListener('touchend', endDragging_1);\r\n                _this.dispatchEvent({\r\n                    type: 'controlstart',\r\n                    originalEvent: event,\r\n                });\r\n            };\r\n            var dragging_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                if (event.cancelable)\r\n                    event.preventDefault();\r\n                extractClientCoordFromEvent(event, _v2);\r\n                var deltaX = lastDragPosition_1.x - _v2.x;\r\n                var deltaY = lastDragPosition_1.y - _v2.y;\r\n                lastDragPosition_1.copy(_v2);\r\n                switch (_this._state) {\r\n                    case ACTION.ROTATE:\r\n                    case ACTION.TOUCH_ROTATE: {\r\n                        _this._rotateInternal(deltaX, deltaY);\r\n                        break;\r\n                    }\r\n                    case ACTION.DOLLY:\r\n                    case ACTION.ZOOM: {\r\n                        var dollyX = _this.dollyToCursor ? (dragStartPosition_1.x - _this._elementRect.x) / _this._elementRect.z * 2 - 1 : 0;\r\n                        var dollyY = _this.dollyToCursor ? (dragStartPosition_1.y - _this._elementRect.y) / _this._elementRect.w * -2 + 1 : 0;\r\n                        _this._state === ACTION.DOLLY ?\r\n                            _this._dollyInternal(deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY) :\r\n                            _this._zoomInternal(deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n                        break;\r\n                    }\r\n                    case ACTION.TOUCH_DOLLY:\r\n                    case ACTION.TOUCH_ZOOM:\r\n                    case ACTION.TOUCH_DOLLY_TRUCK:\r\n                    case ACTION.TOUCH_ZOOM_TRUCK:\r\n                    case ACTION.TOUCH_DOLLY_OFFSET:\r\n                    case ACTION.TOUCH_ZOOM_OFFSET: {\r\n                        var touchEvent = event;\r\n                        var dx = _v2.x - touchEvent.touches[1].clientX;\r\n                        var dy = _v2.y - touchEvent.touches[1].clientY;\r\n                        var distance = Math.sqrt(dx * dx + dy * dy);\r\n                        var dollyDelta = dollyStart_1.y - distance;\r\n                        dollyStart_1.set(0, distance);\r\n                        var dollyX = _this.dollyToCursor ? (lastDragPosition_1.x - _this._elementRect.x) / _this._elementRect.z * 2 - 1 : 0;\r\n                        var dollyY = _this.dollyToCursor ? (lastDragPosition_1.y - _this._elementRect.y) / _this._elementRect.w * -2 + 1 : 0;\r\n                        _this._state === ACTION.TOUCH_DOLLY ||\r\n                            _this._state === ACTION.TOUCH_DOLLY_TRUCK ?\r\n                            _this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY) :\r\n                            _this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n                        if (_this._state === ACTION.TOUCH_DOLLY_TRUCK ||\r\n                            _this._state === ACTION.TOUCH_ZOOM_TRUCK) {\r\n                            _this._truckInternal(deltaX, deltaY, false);\r\n                        }\r\n                        else if (_this._state === ACTION.TOUCH_DOLLY_OFFSET ||\r\n                            _this._state === ACTION.TOUCH_ZOOM_OFFSET) {\r\n                            _this._truckInternal(deltaX, deltaY, true);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case ACTION.TRUCK:\r\n                    case ACTION.TOUCH_TRUCK: {\r\n                        _this._truckInternal(deltaX, deltaY, false);\r\n                        break;\r\n                    }\r\n                    case ACTION.OFFSET:\r\n                    case ACTION.TOUCH_OFFSET: {\r\n                        _this._truckInternal(deltaX, deltaY, true);\r\n                        break;\r\n                    }\r\n                }\r\n                _this.dispatchEvent({\r\n                    type: 'control',\r\n                    originalEvent: event,\r\n                });\r\n            };\r\n            var endDragging_1 = function (event) {\r\n                if (!_this._enabled)\r\n                    return;\r\n                cancelDragging_1();\r\n                _this.dispatchEvent({\r\n                    type: 'controlend',\r\n                    originalEvent: event,\r\n                });\r\n            };\r\n            _this._domElement.addEventListener('mousedown', onMouseDown_1);\r\n            _this._domElement.addEventListener('touchstart', onTouchStart_1, { passive: true });\r\n            _this._domElement.addEventListener('wheel', onMouseWheel_1, { passive: false });\r\n            _this._domElement.addEventListener('contextmenu', onContextMenu_1);\r\n            _this._removeAllEventListeners = function () {\r\n                _this._domElement.removeEventListener('mousedown', onMouseDown_1);\r\n                _this._domElement.removeEventListener('touchstart', onTouchStart_1, { passive: true });\r\n                _this._domElement.removeEventListener('wheel', onMouseWheel_1, { passive: false });\r\n                _this._domElement.removeEventListener('contextmenu', onContextMenu_1);\r\n                document.removeEventListener('mousemove', dragging_1);\r\n                document.removeEventListener('touchmove', dragging_1, { passive: false });\r\n                document.removeEventListener('mouseup', endDragging_1);\r\n                document.removeEventListener('touchend', endDragging_1);\r\n            };\r\n            _this.cancel = function () {\r\n                cancelDragging_1();\r\n                _this.dispatchEvent({\r\n                    type: 'controlend',\r\n                    originalEvent: null,\r\n                });\r\n            };\r\n        }\r\n        _this.update(0);\r\n        return _this;\r\n    }\r\n    CameraControls.install = function (libs) {\r\n        THREE = libs.THREE;\r\n        _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\r\n        _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\r\n        _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\r\n        _v2 = new THREE.Vector2();\r\n        _v3A = new THREE.Vector3();\r\n        _v3B = new THREE.Vector3();\r\n        _v3C = new THREE.Vector3();\r\n        _xColumn = new THREE.Vector3();\r\n        _yColumn = new THREE.Vector3();\r\n        _zColumn = new THREE.Vector3();\r\n        _sphericalA = new THREE.Spherical();\r\n        _sphericalB = new THREE.Spherical();\r\n        _box3A = new THREE.Box3();\r\n        _box3B = new THREE.Box3();\r\n        _sphere = new THREE.Sphere();\r\n        _quaternionA = new THREE.Quaternion();\r\n        _quaternionB = new THREE.Quaternion();\r\n        _rotationMatrix = new THREE.Matrix4();\r\n        _raycaster = new THREE.Raycaster();\r\n    };\r\n    Object.defineProperty(CameraControls, \"ACTION\", {\r\n        get: function () {\r\n            return readonlyACTION;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"enabled\", {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (enabled) {\r\n            this._enabled = enabled;\r\n            if (!enabled)\r\n                this.cancel();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"currentAction\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"distance\", {\r\n        get: function () {\r\n            return this._spherical.radius;\r\n        },\r\n        set: function (distance) {\r\n            if (this._spherical.radius === distance &&\r\n                this._sphericalEnd.radius === distance)\r\n                return;\r\n            this._spherical.radius = distance;\r\n            this._sphericalEnd.radius = distance;\r\n            this._needsUpdate = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"azimuthAngle\", {\r\n        get: function () {\r\n            return this._spherical.theta;\r\n        },\r\n        set: function (azimuthAngle) {\r\n            if (this._spherical.theta === azimuthAngle &&\r\n                this._sphericalEnd.theta === azimuthAngle)\r\n                return;\r\n            this._spherical.theta = azimuthAngle;\r\n            this._sphericalEnd.theta = azimuthAngle;\r\n            this._needsUpdate = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"polarAngle\", {\r\n        get: function () {\r\n            return this._spherical.phi;\r\n        },\r\n        set: function (polarAngle) {\r\n            if (this._spherical.phi === polarAngle &&\r\n                this._sphericalEnd.phi === polarAngle)\r\n                return;\r\n            this._spherical.phi = polarAngle;\r\n            this._sphericalEnd.phi = polarAngle;\r\n            this._needsUpdate = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CameraControls.prototype, \"boundaryEnclosesCamera\", {\r\n        get: function () {\r\n            return this._boundaryEnclosesCamera;\r\n        },\r\n        set: function (boundaryEnclosesCamera) {\r\n            this._boundaryEnclosesCamera = boundaryEnclosesCamera;\r\n            this._needsUpdate = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CameraControls.prototype.addEventListener = function (type, listener) {\r\n        _super.prototype.addEventListener.call(this, type, listener);\r\n    };\r\n    CameraControls.prototype.removeEventListener = function (type, listener) {\r\n        _super.prototype.removeEventListener.call(this, type, listener);\r\n    };\r\n    CameraControls.prototype.rotate = function (azimuthAngle, polarAngle, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\r\n    };\r\n    CameraControls.prototype.rotateTo = function (azimuthAngle, polarAngle, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        var theta = THREE.MathUtils.clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\r\n        var phi = THREE.MathUtils.clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\r\n        this._sphericalEnd.theta = theta;\r\n        this._sphericalEnd.phi = phi;\r\n        this._sphericalEnd.makeSafe();\r\n        if (!enableTransition) {\r\n            this._spherical.theta = this._sphericalEnd.theta;\r\n            this._spherical.phi = this._sphericalEnd.phi;\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.dolly = function (distance, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\r\n    };\r\n    CameraControls.prototype.dollyTo = function (distance, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this._sphericalEnd.radius = THREE.MathUtils.clamp(distance, this.minDistance, this.maxDistance);\r\n        if (!enableTransition) {\r\n            this._spherical.radius = this._sphericalEnd.radius;\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.zoom = function (zoomStep, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\r\n    };\r\n    CameraControls.prototype.zoomTo = function (zoom, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this._zoomEnd = THREE.MathUtils.clamp(zoom, this.minZoom, this.maxZoom);\r\n        if (!enableTransition) {\r\n            this._zoom = this._zoomEnd;\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.pan = function (x, y, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        console.log('`pan` has been renamed to `truck`');\r\n        this.truck(x, y, enableTransition);\r\n    };\r\n    CameraControls.prototype.truck = function (x, y, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this._camera.updateMatrix();\r\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\r\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\r\n        _xColumn.multiplyScalar(x);\r\n        _yColumn.multiplyScalar(-y);\r\n        var offset = _v3A.copy(_xColumn).add(_yColumn);\r\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\r\n        if (!enableTransition) {\r\n            this._target.copy(this._targetEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.forward = function (distance, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\r\n        _v3A.crossVectors(this._camera.up, _v3A);\r\n        _v3A.multiplyScalar(distance);\r\n        this._encloseToBoundary(this._targetEnd, _v3A, this.boundaryFriction);\r\n        if (!enableTransition) {\r\n            this._target.copy(this._targetEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.moveTo = function (x, y, z, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this._targetEnd.set(x, y, z);\r\n        if (!enableTransition) {\r\n            this._target.copy(this._targetEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.fitToBox = function (box3OrObject, enableTransition, _a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.paddingLeft, paddingLeft = _c === void 0 ? 0 : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? 0 : _d, _e = _b.paddingBottom, paddingBottom = _e === void 0 ? 0 : _e, _f = _b.paddingTop, paddingTop = _f === void 0 ? 0 : _f;\r\n        var aabb = box3OrObject.isBox3\r\n            ? _box3A.copy(box3OrObject)\r\n            : _box3A.setFromObject(box3OrObject);\r\n        if (aabb.isEmpty()) {\r\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\r\n            return;\r\n        }\r\n        var theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\r\n        var phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\r\n        this.rotateTo(theta, phi, enableTransition);\r\n        var normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\r\n        var rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\r\n        var viewFromPolar = approxEquals(Math.abs(normal.y), 1);\r\n        if (viewFromPolar) {\r\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\r\n        }\r\n        var bb = _box3B.makeEmpty();\r\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\r\n        bb.expandByPoint(_v3B);\r\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\r\n        bb.min.x -= paddingLeft;\r\n        bb.min.y -= paddingBottom;\r\n        bb.max.x += paddingRight;\r\n        bb.max.y += paddingTop;\r\n        var bbSize = bb.getSize(_v3A);\r\n        var center = bb.getCenter(_v3B).applyQuaternion(rotation);\r\n        if (isPerspectiveCamera(this._camera)) {\r\n            var distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z);\r\n            this.moveTo(center.x, center.y, center.z, enableTransition);\r\n            this.dollyTo(distance, enableTransition);\r\n            this.setFocalOffset(0, 0, 0, enableTransition);\r\n            return;\r\n        }\r\n        else if (isOrthographicCamera(this._camera)) {\r\n            var camera = this._camera;\r\n            var width = camera.right - camera.left;\r\n            var height = camera.top - camera.bottom;\r\n            var zoom = Math.min(width / bbSize.x, height / bbSize.y);\r\n            this.moveTo(center.x, center.y, center.z, enableTransition);\r\n            this.zoomTo(zoom, enableTransition);\r\n            this.setFocalOffset(0, 0, 0, enableTransition);\r\n            return;\r\n        }\r\n    };\r\n    CameraControls.prototype.fitTo = function (box3OrObject, enableTransition, fitToOptions) {\r\n        if (fitToOptions === void 0) { fitToOptions = {}; }\r\n        console.warn('camera-controls: fitTo() has been renamed to fitToBox()');\r\n        this.fitToBox(box3OrObject, enableTransition, fitToOptions);\r\n    };\r\n    CameraControls.prototype.fitToSphere = function (sphereOrMesh, enableTransition) {\r\n        var isSphere = sphereOrMesh instanceof THREE.Sphere;\r\n        var boundingSphere = isSphere ?\r\n            _sphere.copy(sphereOrMesh) :\r\n            createBoundingSphere(sphereOrMesh, _sphere);\r\n        this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition);\r\n        if (isPerspectiveCamera(this._camera)) {\r\n            var distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\r\n            this.dollyTo(distanceToFit, enableTransition);\r\n        }\r\n        else if (isOrthographicCamera(this._camera)) {\r\n            var width = this._camera.right - this._camera.left;\r\n            var height = this._camera.top - this._camera.bottom;\r\n            var diameter = 2 * boundingSphere.radius;\r\n            var zoom = Math.min(width / diameter, height / diameter);\r\n            this.zoomTo(zoom, enableTransition);\r\n        }\r\n        this.setFocalOffset(0, 0, 0, enableTransition);\r\n    };\r\n    CameraControls.prototype.setLookAt = function (positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        var position = _v3A.set(positionX, positionY, positionZ);\r\n        var target = _v3B.set(targetX, targetY, targetZ);\r\n        this._targetEnd.copy(target);\r\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\r\n        this.normalizeRotations();\r\n        if (!enableTransition) {\r\n            this._target.copy(this._targetEnd);\r\n            this._spherical.copy(this._sphericalEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.lerpLookAt = function (positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        var positionA = _v3A.set(positionAX, positionAY, positionAZ);\r\n        var targetA = _v3B.set(targetAX, targetAY, targetAZ);\r\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\r\n        var targetB = _v3A.set(targetBX, targetBY, targetBZ);\r\n        this._targetEnd.copy(targetA).lerp(targetB, t);\r\n        var positionB = _v3B.set(positionBX, positionBY, positionBZ);\r\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\r\n        var deltaTheta = _sphericalB.theta - _sphericalA.theta;\r\n        var deltaPhi = _sphericalB.phi - _sphericalA.phi;\r\n        var deltaRadius = _sphericalB.radius - _sphericalA.radius;\r\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\r\n        this.normalizeRotations();\r\n        if (!enableTransition) {\r\n            this._target.copy(this._targetEnd);\r\n            this._spherical.copy(this._sphericalEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.setPosition = function (positionX, positionY, positionZ, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\r\n    };\r\n    CameraControls.prototype.setTarget = function (targetX, targetY, targetZ, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        var pos = this.getPosition(_v3A);\r\n        this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\r\n    };\r\n    CameraControls.prototype.setFocalOffset = function (x, y, z, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this._focalOffsetEnd.set(x, y, z);\r\n        if (!enableTransition) {\r\n            this._focalOffset.copy(this._focalOffsetEnd);\r\n        }\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.setBoundary = function (box3) {\r\n        if (!box3) {\r\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\r\n            this._boundary.max.set(Infinity, Infinity, Infinity);\r\n            this._needsUpdate = true;\r\n            return;\r\n        }\r\n        this._boundary.copy(box3);\r\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.setViewport = function (viewportOrX, y, width, height) {\r\n        if (viewportOrX === null) {\r\n            this._viewport = null;\r\n            return;\r\n        }\r\n        this._viewport = this._viewport || new THREE.Vector4();\r\n        if (typeof viewportOrX === 'number') {\r\n            this._viewport.set(viewportOrX, y, width, height);\r\n        }\r\n        else {\r\n            this._viewport.copy(viewportOrX);\r\n        }\r\n    };\r\n    CameraControls.prototype.getDistanceToFitBox = function (width, height, depth) {\r\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\r\n            return this._spherical.radius;\r\n        var boundingRectAspect = width / height;\r\n        var fov = this._camera.getEffectiveFOV() * THREE.MathUtils.DEG2RAD;\r\n        var aspect = this._camera.aspect;\r\n        var heightToFit = boundingRectAspect < aspect ? height : width / aspect;\r\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\r\n    };\r\n    CameraControls.prototype.getDistanceToFit = function (width, height, depth) {\r\n        console.warn('camera-controls: getDistanceToFit() has been renamed to getDistanceToFitBox()');\r\n        return this.getDistanceToFitBox(width, height, depth);\r\n    };\r\n    CameraControls.prototype.getDistanceToFitSphere = function (radius) {\r\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\r\n            return this._spherical.radius;\r\n        var vFOV = this._camera.getEffectiveFOV() * THREE.MathUtils.DEG2RAD;\r\n        var hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\r\n        var fov = 1 < this._camera.aspect ? vFOV : hFOV;\r\n        return radius / (Math.sin(fov * 0.5));\r\n    };\r\n    CameraControls.prototype.getTarget = function (out) {\r\n        var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\r\n        return _out.copy(this._targetEnd);\r\n    };\r\n    CameraControls.prototype.getPosition = function (out) {\r\n        var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\r\n        return _out.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).add(this._targetEnd);\r\n    };\r\n    CameraControls.prototype.getFocalOffset = function (out) {\r\n        var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\r\n        return _out.copy(this._focalOffsetEnd);\r\n    };\r\n    CameraControls.prototype.normalizeRotations = function () {\r\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\r\n        if (this._sphericalEnd.theta < 0)\r\n            this._sphericalEnd.theta += PI_2;\r\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\r\n    };\r\n    CameraControls.prototype.reset = function (enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition);\r\n        this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition);\r\n        this.zoomTo(this._zoom0, enableTransition);\r\n    };\r\n    CameraControls.prototype.saveState = function () {\r\n        this._target0.copy(this._target);\r\n        this._position0.copy(this._camera.position);\r\n        this._zoom0 = this._zoom;\r\n    };\r\n    CameraControls.prototype.updateCameraUp = function () {\r\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\r\n        quatInvertCompat(this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace));\r\n    };\r\n    CameraControls.prototype.update = function (delta) {\r\n        var dampingFactor = this._state === ACTION.NONE ? this.dampingFactor : this.draggingDampingFactor;\r\n        var lerpRatio = 1.0 - Math.exp(-dampingFactor * delta * FPS_60);\r\n        var deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\r\n        var deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\r\n        var deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\r\n        var deltaTarget = _v3A.subVectors(this._targetEnd, this._target);\r\n        var deltaOffset = _v3B.subVectors(this._focalOffsetEnd, this._focalOffset);\r\n        if (!approxZero(deltaTheta) ||\r\n            !approxZero(deltaPhi) ||\r\n            !approxZero(deltaRadius) ||\r\n            !approxZero(deltaTarget.x) ||\r\n            !approxZero(deltaTarget.y) ||\r\n            !approxZero(deltaTarget.z) ||\r\n            !approxZero(deltaOffset.x) ||\r\n            !approxZero(deltaOffset.y) ||\r\n            !approxZero(deltaOffset.z)) {\r\n            this._spherical.set(this._spherical.radius + deltaRadius * lerpRatio, this._spherical.phi + deltaPhi * lerpRatio, this._spherical.theta + deltaTheta * lerpRatio);\r\n            this._target.add(deltaTarget.multiplyScalar(lerpRatio));\r\n            this._focalOffset.add(deltaOffset.multiplyScalar(lerpRatio));\r\n            this._needsUpdate = true;\r\n        }\r\n        else {\r\n            this._spherical.copy(this._sphericalEnd);\r\n            this._target.copy(this._targetEnd);\r\n            this._focalOffset.copy(this._focalOffsetEnd);\r\n        }\r\n        if (this._dollyControlAmount !== 0) {\r\n            if (isPerspectiveCamera(this._camera)) {\r\n                var camera = this._camera;\r\n                var direction = _v3A.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate();\r\n                var planeX = _v3B.copy(direction).cross(camera.up).normalize();\r\n                if (planeX.lengthSq() === 0)\r\n                    planeX.x = 1.0;\r\n                var planeY = _v3C.crossVectors(planeX, direction);\r\n                var worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * THREE.MathUtils.DEG2RAD * 0.5);\r\n                var prevRadius = this._sphericalEnd.radius - this._dollyControlAmount;\r\n                var lerpRatio_1 = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\r\n                var cursor = _v3A.copy(this._targetEnd)\r\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect))\r\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\r\n                this._targetEnd.lerp(cursor, lerpRatio_1);\r\n                this._target.copy(this._targetEnd);\r\n            }\r\n            else if (isOrthographicCamera(this._camera)) {\r\n                var camera = this._camera;\r\n                var worldPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);\r\n                var quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\r\n                var divisor = quaternion.dot(camera.up);\r\n                var distance = approxZero(divisor) ? -worldPosition.dot(camera.up) : -worldPosition.dot(camera.up) / divisor;\r\n                var cursor = _v3C.copy(worldPosition).add(quaternion.multiplyScalar(distance));\r\n                this._targetEnd.lerp(cursor, 1 - camera.zoom / this._dollyControlAmount);\r\n                this._target.copy(this._targetEnd);\r\n            }\r\n            this._dollyControlAmount = 0;\r\n        }\r\n        var maxDistance = this._collisionTest();\r\n        this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\r\n        this._spherical.makeSafe();\r\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\r\n        this._camera.lookAt(this._target);\r\n        var affectOffset = !approxZero(this._focalOffset.x) ||\r\n            !approxZero(this._focalOffset.y) ||\r\n            !approxZero(this._focalOffset.z);\r\n        if (affectOffset) {\r\n            this._camera.updateMatrix();\r\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\r\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\r\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\r\n            _xColumn.multiplyScalar(this._focalOffset.x);\r\n            _yColumn.multiplyScalar(-this._focalOffset.y);\r\n            _zColumn.multiplyScalar(this._focalOffset.z);\r\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\r\n            this._camera.position.add(_v3A);\r\n        }\r\n        if (this._boundaryEnclosesCamera) {\r\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\r\n        }\r\n        var zoomDelta = this._zoomEnd - this._zoom;\r\n        this._zoom += zoomDelta * lerpRatio;\r\n        if (this._camera.zoom !== this._zoom) {\r\n            if (approxZero(zoomDelta))\r\n                this._zoom = this._zoomEnd;\r\n            this._camera.zoom = this._zoom;\r\n            this._camera.updateProjectionMatrix();\r\n            this._updateNearPlaneCorners();\r\n            this._needsUpdate = true;\r\n        }\r\n        var updated = this._needsUpdate;\r\n        if (updated && !this._updatedLastTime) {\r\n            this.dispatchEvent({ type: 'wake' });\r\n            this.dispatchEvent({ type: 'update' });\r\n        }\r\n        else if (updated) {\r\n            this.dispatchEvent({ type: 'update' });\r\n        }\r\n        else if (!updated && this._updatedLastTime) {\r\n            this.dispatchEvent({ type: 'sleep' });\r\n        }\r\n        this._updatedLastTime = updated;\r\n        this._needsUpdate = false;\r\n        return updated;\r\n    };\r\n    CameraControls.prototype.toJSON = function () {\r\n        return JSON.stringify({\r\n            enabled: this._enabled,\r\n            minDistance: this.minDistance,\r\n            maxDistance: infinityToMaxNumber(this.maxDistance),\r\n            minZoom: this.minZoom,\r\n            maxZoom: infinityToMaxNumber(this.maxZoom),\r\n            minPolarAngle: this.minPolarAngle,\r\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\r\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\r\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\r\n            dampingFactor: this.dampingFactor,\r\n            draggingDampingFactor: this.draggingDampingFactor,\r\n            dollySpeed: this.dollySpeed,\r\n            truckSpeed: this.truckSpeed,\r\n            dollyToCursor: this.dollyToCursor,\r\n            verticalDragToForward: this.verticalDragToForward,\r\n            target: this._targetEnd.toArray(),\r\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\r\n            zoom: this._zoomEnd,\r\n            focalOffset: this._focalOffsetEnd.toArray(),\r\n            target0: this._target0.toArray(),\r\n            position0: this._position0.toArray(),\r\n            zoom0: this._zoom0,\r\n            focalOffset0: this._focalOffset0.toArray(),\r\n        });\r\n    };\r\n    CameraControls.prototype.fromJSON = function (json, enableTransition) {\r\n        if (enableTransition === void 0) { enableTransition = false; }\r\n        var obj = JSON.parse(json);\r\n        var position = _v3A.fromArray(obj.position);\r\n        this.enabled = obj.enabled;\r\n        this.minDistance = obj.minDistance;\r\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\r\n        this.minZoom = obj.minZoom;\r\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\r\n        this.minPolarAngle = obj.minPolarAngle;\r\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\r\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\r\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\r\n        this.dampingFactor = obj.dampingFactor;\r\n        this.draggingDampingFactor = obj.draggingDampingFactor;\r\n        this.dollySpeed = obj.dollySpeed;\r\n        this.truckSpeed = obj.truckSpeed;\r\n        this.dollyToCursor = obj.dollyToCursor;\r\n        this.verticalDragToForward = obj.verticalDragToForward;\r\n        this._target0.fromArray(obj.target0);\r\n        this._position0.fromArray(obj.position0);\r\n        this._zoom0 = obj.zoom0;\r\n        this._focalOffset0.fromArray(obj.focalOffset0);\r\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\r\n        _sphericalA.setFromVector3(position.sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\r\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\r\n        this.zoomTo(obj.zoom, enableTransition);\r\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\r\n        this._needsUpdate = true;\r\n    };\r\n    CameraControls.prototype.dispose = function () {\r\n        this._removeAllEventListeners();\r\n    };\r\n    CameraControls.prototype._encloseToBoundary = function (position, offset, friction) {\r\n        var offsetLength2 = offset.lengthSq();\r\n        if (offsetLength2 === 0.0) {\r\n            return position;\r\n        }\r\n        var newTarget = _v3B.copy(offset).add(position);\r\n        var clampedTarget = this._boundary.clampPoint(newTarget, _v3C);\r\n        var deltaClampedTarget = clampedTarget.sub(newTarget);\r\n        var deltaClampedTargetLength2 = deltaClampedTarget.lengthSq();\r\n        if (deltaClampedTargetLength2 === 0.0) {\r\n            return position.add(offset);\r\n        }\r\n        else if (deltaClampedTargetLength2 === offsetLength2) {\r\n            return position;\r\n        }\r\n        else if (friction === 0.0) {\r\n            return position.add(offset).add(deltaClampedTarget);\r\n        }\r\n        else {\r\n            var offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\r\n            return position\r\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\r\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\r\n        }\r\n    };\r\n    CameraControls.prototype._updateNearPlaneCorners = function () {\r\n        if (isPerspectiveCamera(this._camera)) {\r\n            var camera = this._camera;\r\n            var near = camera.near;\r\n            var fov = camera.getEffectiveFOV() * THREE.MathUtils.DEG2RAD;\r\n            var heightHalf = Math.tan(fov * 0.5) * near;\r\n            var widthHalf = heightHalf * camera.aspect;\r\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\r\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\r\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\r\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\r\n        }\r\n        else if (isOrthographicCamera(this._camera)) {\r\n            var camera = this._camera;\r\n            var zoomInv = 1 / camera.zoom;\r\n            var left = camera.left * zoomInv;\r\n            var right = camera.right * zoomInv;\r\n            var top_1 = camera.top * zoomInv;\r\n            var bottom = camera.bottom * zoomInv;\r\n            this._nearPlaneCorners[0].set(left, top_1, 0);\r\n            this._nearPlaneCorners[1].set(right, top_1, 0);\r\n            this._nearPlaneCorners[2].set(right, bottom, 0);\r\n            this._nearPlaneCorners[3].set(left, bottom, 0);\r\n        }\r\n    };\r\n    CameraControls.prototype._collisionTest = function () {\r\n        var distance = Infinity;\r\n        var hasCollider = this.colliderMeshes.length >= 1;\r\n        if (!hasCollider)\r\n            return distance;\r\n        if (notSupportedInOrthographicCamera(this._camera, '_collisionTest'))\r\n            return distance;\r\n        distance = this._spherical.radius;\r\n        var direction = _v3A.setFromSpherical(this._spherical).divideScalar(distance);\r\n        _rotationMatrix.lookAt(_ORIGIN, direction, this._camera.up);\r\n        for (var i = 0; i < 4; i++) {\r\n            var nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\r\n            nearPlaneCorner.applyMatrix4(_rotationMatrix);\r\n            var origin_1 = _v3C.addVectors(this._target, nearPlaneCorner);\r\n            _raycaster.set(origin_1, direction);\r\n            _raycaster.far = distance;\r\n            var intersects = _raycaster.intersectObjects(this.colliderMeshes);\r\n            if (intersects.length !== 0 && intersects[0].distance < distance) {\r\n                distance = intersects[0].distance;\r\n            }\r\n        }\r\n        return distance;\r\n    };\r\n    CameraControls.prototype._getClientRect = function (target) {\r\n        var rect = this._domElement.getBoundingClientRect();\r\n        target.x = rect.left;\r\n        target.y = rect.top;\r\n        if (this._viewport) {\r\n            target.x += this._viewport.x;\r\n            target.y += rect.height - this._viewport.w - this._viewport.y;\r\n            target.z = this._viewport.z;\r\n            target.w = this._viewport.w;\r\n        }\r\n        else {\r\n            target.z = rect.width;\r\n            target.w = rect.height;\r\n        }\r\n        return target;\r\n    };\r\n    CameraControls.prototype._removeAllEventListeners = function () { };\r\n    return CameraControls;\r\n}(EventDispatcher));\r\nfunction createBoundingSphere(object3d, out) {\r\n    var boundingSphere = out;\r\n    var center = boundingSphere.center;\r\n    object3d.traverse(function (object) {\r\n        if (!object.isMesh)\r\n            return;\r\n        _box3A.expandByObject(object);\r\n    });\r\n    _box3A.getCenter(center);\r\n    var maxRadiusSq = 0;\r\n    object3d.traverse(function (object) {\r\n        if (!object.isMesh)\r\n            return;\r\n        var mesh = object;\r\n        var geometry = mesh.geometry.clone();\r\n        geometry.applyMatrix4(mesh.matrixWorld);\r\n        if (geometry.isBufferGeometry) {\r\n            var bufferGeometry = geometry;\r\n            var position = bufferGeometry.attributes.position;\r\n            for (var i = 0, l = position.count; i < l; i++) {\r\n                _v3A.fromBufferAttribute(position, i);\r\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\r\n            }\r\n        }\r\n        else {\r\n            var position = geometry.attributes.position;\r\n            var vector = new THREE.Vector3();\r\n            for (var i = 0, l = position.count; i < l; i++) {\r\n                vector.fromBufferAttribute(position, i);\r\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\r\n            }\r\n        }\r\n    });\r\n    boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n    return boundingSphere;\r\n}\n\nexport default CameraControls;\n", "import d from \"./node_modules/camera-controls/dist/camera-controls.module.js\";export default d;"],
  "mappings": "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",
  "names": []
}
